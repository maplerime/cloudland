// Code generated by "stringer -type ErrCode -trimprefix Err -output error_codes_str.go"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrUnknown-100000]
	_ = x[ErrInsufficientResource-100001]
	_ = x[ErrResourceNotFound-100002]
	_ = x[ErrInvalidParameter-100003]
	_ = x[ErrPermissionDenied-100004]
	_ = x[ErrExecuteOnHyperFailed-100005]
	_ = x[ErrOwnerNotFound-100006]
	_ = x[ErrEncryptionFailed-100008]
	_ = x[ErrJSONMarshalFailed-100009]
	_ = x[ErrResourcesInOrg-100010]
	_ = x[ErrInvalidCIDR-100011]
	_ = x[ErrCIDRTooBig-100012]
	_ = x[ErrDatabaseError-100100]
	_ = x[ErrSQLSyntaxError-100101]
	_ = x[ErrUserNotFound-100200]
	_ = x[ErrUserCreationFailed-100201]
	_ = x[ErrUserUpdateFailed-100202]
	_ = x[ErrUserDeleteFailed-100203]
	_ = x[ErrOrgNotFound-100204]
	_ = x[ErrOrgCreationFailed-100205]
	_ = x[ErrOrgUpdateFailed-100206]
	_ = x[ErrOrgDeleteFailed-100207]
	_ = x[ErrNoRoleOnUser-100208]
	_ = x[ErrPasswordHashFailed-100209]
	_ = x[ErrPasswordMismatch-100210]
	_ = x[ErrMemberNotFound-100300]
	_ = x[ErrMemberCreationFailed-100301]
	_ = x[ErrMemberUpdateFailed-100302]
	_ = x[ErrMemberDeleteFailed-100303]
	_ = x[ErrInstanceNotFound-111001]
	_ = x[ErrInstanceCreationFailed-111002]
	_ = x[ErrInstanceUpdateFailed-111003]
	_ = x[ErrInstanceDeleteFailed-111004]
	_ = x[ErrInstanceInvalidState-111005]
	_ = x[ErrInstanceInvalidConfig-111007]
	_ = x[ErrInstancePowerActionFail-111008]
	_ = x[ErrInstanceNoRouter-111009]
	_ = x[ErrInstanceNoPrimaryInterface-111010]
	_ = x[ErrInvalidDomainFormat-111011]
	_ = x[ErrConsoleCreateFailed-111012]
	_ = x[ErrConsoleNotFound-111013]
	_ = x[ErrInvalidConsoleToken-111014]
	_ = x[ErrInvalidMetadata-111015]
	_ = x[ErrFlavorNotFound-111901]
	_ = x[ErrFlavorCreateFailed-111902]
	_ = x[ErrFlavorUpdateFailed-111903]
	_ = x[ErrFlavorDeleteFailed-111904]
	_ = x[ErrFlavorInUse-111905]
	_ = x[ErrDiskTooSmall-111906]
	_ = x[ErrMigrationNotFound-111801]
	_ = x[ErrMigrationCreateFailed-111802]
	_ = x[ErrMigrationUpdateFailed-111803]
	_ = x[ErrMigrationDeleteFailed-111804]
	_ = x[ErrMigrationInProgress-111805]
	_ = x[ErrVolumeNotFound-121001]
	_ = x[ErrVolumeCreationFailed-121002]
	_ = x[ErrVolumeUpdateFailed-121003]
	_ = x[ErrVolumeDeleteFailed-121004]
	_ = x[ErrVolumeAttachFailed-121005]
	_ = x[ErrVolumeDetachFailed-121006]
	_ = x[ErrVolumeInvalidState-121007]
	_ = x[ErrVolumeInvalidSize-121008]
	_ = x[ErrBootVolumeNotFound-121009]
	_ = x[ErrBootVolumeUpdateFailed-121010]
	_ = x[ErrBootVolumeDeleteFailed-121011]
	_ = x[ErrVolumeIsInUse-121012]
	_ = x[ErrBootVolumeCannotDetach-121013]
	_ = x[ErrVolumeIsBusy-121014]
	_ = x[ErrVolumeIsRestoring-121015]
	_ = x[ErrBackupNotFound-125100]
	_ = x[ErrBackupCreationFailed-125101]
	_ = x[ErrBackupUpdateFailed-125102]
	_ = x[ErrBackupDeleteFailed-125103]
	_ = x[ErrBackupInUse-125104]
	_ = x[ErrCannotRestoreWhileInstanceIsRunning-125105]
	_ = x[ErrAddressNotFound-131001]
	_ = x[ErrAddressUpdateFailed-131002]
	_ = x[ErrAddressDeleteFailed-131003]
	_ = x[ErrInsufficientAddress-131004]
	_ = x[ErrAddressCreateFailed-131005]
	_ = x[ErrAddressInUse-131006]
	_ = x[ErrSubnetNotFound-131101]
	_ = x[ErrSubnetCreateFailed-131102]
	_ = x[ErrSubnetUpdateFailed-131103]
	_ = x[ErrSubnetDeleteFailed-131104]
	_ = x[ErrSubnetShouldBePublic-131105]
	_ = x[ErrSubnetShouldBeSite-131106]
	_ = x[ErrPublicSubnetNotFound-131107]
	_ = x[ErrSiteSubnetUpdateFailed-131108]
	_ = x[ErrSubnetsCrossVPCInOneInstance-131109]
	_ = x[ErrPublicSubnetCannotInVPC-131110]
	_ = x[ErrInterfaceNotFound-131201]
	_ = x[ErrInterfaceCreateFailed-131202]
	_ = x[ErrInterfaceUpdateFailed-131203]
	_ = x[ErrNotAllowInterfaceInSiteSubnet-131204]
	_ = x[ErrInterfaceDeleteFailed-131205]
	_ = x[ErrCannotDeletePrimaryInterface-131206]
	_ = x[ErrTooManyInterfaces-131207]
	_ = x[ErrInterfaceInvalidSubnet-131208]
	_ = x[ErrFIPNotFound-131201]
	_ = x[ErrFIPCreateFailed-131202]
	_ = x[ErrFIPUpdateFailed-131203]
	_ = x[ErrDeleteNativeFIPFailed-131204]
	_ = x[ErrUpdatePublicIPFailed-131205]
	_ = x[ErrUpdateInstIDOfFIPFailed-131206]
	_ = x[ErrUpdateSubnetIDOfFIPFailed-131207]
	_ = x[ErrFIPDeleteFailed-131208]
	_ = x[ErrFIPInUse-131209]
	_ = x[ErrDummyFIPCreateFailed-131210]
	_ = x[ErrUpdateGroupIDFailed-131211]
	_ = x[ErrRouterNotFound-131306]
	_ = x[ErrRouterCreateFailed-131307]
	_ = x[ErrRouterUpdateFailed-131308]
	_ = x[ErrRouterUpdateDefaultSGFailed-131309]
	_ = x[ErrRouterDeleteFailed-131310]
	_ = x[ErrRouterInUse-131311]
	_ = x[ErrRouterHasFloatingIPs-131312]
	_ = x[ErrRouterHasSubnets-131313]
	_ = x[ErrRouterHasPortmaps-131314]
	_ = x[ErrIpGroupNotFound-131401]
	_ = x[ErrIpGroupCreateFailed-131402]
	_ = x[ErrIpGroupUpdateFailed-131403]
	_ = x[ErrIpGroupDeleteFailed-131404]
	_ = x[ErrIpGroupInUse-131405]
	_ = x[ErrSecurityGroupNotFound-141001]
	_ = x[ErrSecurityGroupCreateFailed-141002]
	_ = x[ErrSecurityGroupUpdateFailed-141003]
	_ = x[ErrSecurityGroupDeleteFailed-141004]
	_ = x[ErrAssociateSG2InterfaceFailed-141005]
	_ = x[ErrAtLeastOneSGRequired-141006]
	_ = x[ErrCannotDeleteDefaultSG-141007]
	_ = x[ErrSGHasInterfaces-141008]
	_ = x[ErrSecurityRuleNotFound-141009]
	_ = x[ErrSecurityRuleInvalid-141010]
	_ = x[ErrSecurityRuleDeleteFailed-141011]
	_ = x[ErrSecurityRuleCreateFailed-141012]
	_ = x[ErrSecurityRuleUpdateFailed-141013]
	_ = x[ErrImageNotFound-151000]
	_ = x[ErrImageInUse-151001]
	_ = x[ErrImageNoQA-151002]
	_ = x[ErrImageCreateFailed-151003]
	_ = x[ErrImageUpdateFailed-151004]
	_ = x[ErrImageDeleteFailed-151005]
	_ = x[ErrImageNotAvailable-151006]
	_ = x[ErrImageStorageCreateFailed-151007]
	_ = x[ErrImageStorageDeleteFailed-151008]
	_ = x[ErrImageStorageUpdateFailed-151009]
	_ = x[ErrImageStorageNotFound-151010]
	_ = x[ErrRescueImageNotFound-151011]
	_ = x[ErrSSHKeyNotFound-161001]
	_ = x[ErrSSHKeyCreateFailed-161002]
	_ = x[ErrSSHKeyUpdateFailed-161003]
	_ = x[ErrSSHKeyDeleteFailed-161004]
	_ = x[ErrSSHKeyGenerateFailed-161005]
	_ = x[ErrSSHKeyInUse-161006]
	_ = x[ErrNoQualifiedHypervisor-161001]
	_ = x[ErrHypervisorNotFound-161002]
	_ = x[ErrHypervisorUpdateFailed-161003]
	_ = x[ErrHypervisorDeleteFailed-161004]
	_ = x[ErrHypervisorInvalidState-161005]
	_ = x[ErrZoneNotFound-161006]
	_ = x[ErrUnsetDefaultZoneFailed-161007]
	_ = x[ErrZoneCreationFailed-161008]
	_ = x[ErrZoneUpdateFailed-161009]
	_ = x[ErrZoneDeleteFailed-161010]
	_ = x[ErrHypersInZone-161011]
	_ = x[ErrDictionaryRecordsNotFound-199801]
	_ = x[ErrDictionaryCreateFailed-199802]
	_ = x[ErrDictionaryUpdateFailed-199803]
	_ = x[ErrDictionaryDeleteFailed-199804]
}

const _ErrCode_name = "UnknownInsufficientResourceResourceNotFoundInvalidParameterPermissionDeniedExecuteOnHyperFailedOwnerNotFoundEncryptionFailedJSONMarshalFailedResourcesInOrgInvalidCIDRCIDRTooBigDatabaseErrorSQLSyntaxErrorUserNotFoundUserCreationFailedUserUpdateFailedUserDeleteFailedOrgNotFoundOrgCreationFailedOrgUpdateFailedOrgDeleteFailedNoRoleOnUserPasswordHashFailedPasswordMismatchMemberNotFoundMemberCreationFailedMemberUpdateFailedMemberDeleteFailedInstanceNotFoundInstanceCreationFailedInstanceUpdateFailedInstanceDeleteFailedInstanceInvalidStateInstanceInvalidConfigInstancePowerActionFailInstanceNoRouterInstanceNoPrimaryInterfaceInvalidDomainFormatConsoleCreateFailedConsoleNotFoundInvalidConsoleTokenInvalidMetadataMigrationNotFoundMigrationCreateFailedMigrationUpdateFailedMigrationDeleteFailedMigrationInProgressFlavorNotFoundFlavorCreateFailedFlavorUpdateFailedFlavorDeleteFailedFlavorInUseDiskTooSmallVolumeNotFoundVolumeCreationFailedVolumeUpdateFailedVolumeDeleteFailedVolumeAttachFailedVolumeDetachFailedVolumeInvalidStateVolumeInvalidSizeBootVolumeNotFoundBootVolumeUpdateFailedBootVolumeDeleteFailedVolumeIsInUseBootVolumeCannotDetachVolumeIsBusyVolumeIsRestoringBackupNotFoundBackupCreationFailedBackupUpdateFailedBackupDeleteFailedBackupInUseCannotRestoreWhileInstanceIsRunningAddressNotFoundAddressUpdateFailedAddressDeleteFailedInsufficientAddressAddressCreateFailedAddressInUseSubnetNotFoundSubnetCreateFailedSubnetUpdateFailedSubnetDeleteFailedSubnetShouldBePublicSubnetShouldBeSitePublicSubnetNotFoundSiteSubnetUpdateFailedSubnetsCrossVPCInOneInstancePublicSubnetCannotInVPCInterfaceNotFoundInterfaceCreateFailedInterfaceUpdateFailedNotAllowInterfaceInSiteSubnetInterfaceDeleteFailedCannotDeletePrimaryInterfaceTooManyInterfacesInterfaceInvalidSubnetFIPInUseDummyFIPCreateFailedUpdateGroupIDFailedRouterNotFoundRouterCreateFailedRouterUpdateFailedRouterUpdateDefaultSGFailedRouterDeleteFailedRouterInUseRouterHasFloatingIPsRouterHasSubnetsRouterHasPortmapsIpGroupNotFoundIpGroupCreateFailedIpGroupUpdateFailedIpGroupDeleteFailedIpGroupInUseSecurityGroupNotFoundSecurityGroupCreateFailedSecurityGroupUpdateFailedSecurityGroupDeleteFailedAssociateSG2InterfaceFailedAtLeastOneSGRequiredCannotDeleteDefaultSGSGHasInterfacesSecurityRuleNotFoundSecurityRuleInvalidSecurityRuleDeleteFailedSecurityRuleCreateFailedSecurityRuleUpdateFailedImageNotFoundImageInUseImageNoQAImageCreateFailedImageUpdateFailedImageDeleteFailedImageNotAvailableImageStorageCreateFailedImageStorageDeleteFailedImageStorageUpdateFailedImageStorageNotFoundRescueImageNotFoundSSHKeyNotFoundSSHKeyCreateFailedSSHKeyUpdateFailedSSHKeyDeleteFailedSSHKeyGenerateFailedSSHKeyInUseUnsetDefaultZoneFailedZoneCreationFailedZoneUpdateFailedZoneDeleteFailedHypersInZoneDictionaryRecordsNotFoundDictionaryCreateFailedDictionaryUpdateFailedDictionaryDeleteFailed"

var _ErrCode_map = map[ErrCode]string{
	100000: _ErrCode_name[0:7],
	100001: _ErrCode_name[7:27],
	100002: _ErrCode_name[27:43],
	100003: _ErrCode_name[43:59],
	100004: _ErrCode_name[59:75],
	100005: _ErrCode_name[75:95],
	100006: _ErrCode_name[95:108],
	100008: _ErrCode_name[108:124],
	100009: _ErrCode_name[124:141],
	100010: _ErrCode_name[141:155],
	100011: _ErrCode_name[155:166],
	100012: _ErrCode_name[166:176],
	100100: _ErrCode_name[176:189],
	100101: _ErrCode_name[189:203],
	100200: _ErrCode_name[203:215],
	100201: _ErrCode_name[215:233],
	100202: _ErrCode_name[233:249],
	100203: _ErrCode_name[249:265],
	100204: _ErrCode_name[265:276],
	100205: _ErrCode_name[276:293],
	100206: _ErrCode_name[293:308],
	100207: _ErrCode_name[308:323],
	100208: _ErrCode_name[323:335],
	100209: _ErrCode_name[335:353],
	100210: _ErrCode_name[353:369],
	100300: _ErrCode_name[369:383],
	100301: _ErrCode_name[383:403],
	100302: _ErrCode_name[403:421],
	100303: _ErrCode_name[421:439],
	111001: _ErrCode_name[439:455],
	111002: _ErrCode_name[455:477],
	111003: _ErrCode_name[477:497],
	111004: _ErrCode_name[497:517],
	111005: _ErrCode_name[517:537],
	111007: _ErrCode_name[537:558],
	111008: _ErrCode_name[558:581],
	111009: _ErrCode_name[581:597],
	111010: _ErrCode_name[597:623],
	111011: _ErrCode_name[623:642],
	111012: _ErrCode_name[642:661],
	111013: _ErrCode_name[661:676],
	111014: _ErrCode_name[676:695],
	111015: _ErrCode_name[695:710],
	111801: _ErrCode_name[710:727],
	111802: _ErrCode_name[727:748],
	111803: _ErrCode_name[748:769],
	111804: _ErrCode_name[769:790],
	111805: _ErrCode_name[790:809],
	111901: _ErrCode_name[809:823],
	111902: _ErrCode_name[823:841],
	111903: _ErrCode_name[841:859],
	111904: _ErrCode_name[859:877],
	111905: _ErrCode_name[877:888],
	111906: _ErrCode_name[888:900],
	121001: _ErrCode_name[900:914],
	121002: _ErrCode_name[914:934],
	121003: _ErrCode_name[934:952],
	121004: _ErrCode_name[952:970],
	121005: _ErrCode_name[970:988],
	121006: _ErrCode_name[988:1006],
	121007: _ErrCode_name[1006:1024],
	121008: _ErrCode_name[1024:1041],
	121009: _ErrCode_name[1041:1059],
	121010: _ErrCode_name[1059:1081],
	121011: _ErrCode_name[1081:1103],
	121012: _ErrCode_name[1103:1116],
	121013: _ErrCode_name[1116:1138],
	121014: _ErrCode_name[1138:1150],
	121015: _ErrCode_name[1150:1167],
	125100: _ErrCode_name[1167:1181],
	125101: _ErrCode_name[1181:1201],
	125102: _ErrCode_name[1201:1219],
	125103: _ErrCode_name[1219:1237],
	125104: _ErrCode_name[1237:1248],
	125105: _ErrCode_name[1248:1283],
	131001: _ErrCode_name[1283:1298],
	131002: _ErrCode_name[1298:1317],
	131003: _ErrCode_name[1317:1336],
	131004: _ErrCode_name[1336:1355],
	131005: _ErrCode_name[1355:1374],
	131006: _ErrCode_name[1374:1386],
	131101: _ErrCode_name[1386:1400],
	131102: _ErrCode_name[1400:1418],
	131103: _ErrCode_name[1418:1436],
	131104: _ErrCode_name[1436:1454],
	131105: _ErrCode_name[1454:1474],
	131106: _ErrCode_name[1474:1492],
	131107: _ErrCode_name[1492:1512],
	131108: _ErrCode_name[1512:1534],
	131109: _ErrCode_name[1534:1562],
	131110: _ErrCode_name[1562:1585],
	131201: _ErrCode_name[1585:1602],
	131202: _ErrCode_name[1602:1623],
	131203: _ErrCode_name[1623:1644],
	131204: _ErrCode_name[1644:1673],
	131205: _ErrCode_name[1673:1694],
	131206: _ErrCode_name[1694:1722],
	131207: _ErrCode_name[1722:1739],
	131208: _ErrCode_name[1739:1761],
	131209: _ErrCode_name[1761:1769],
	131210: _ErrCode_name[1769:1789],
	131211: _ErrCode_name[1789:1808],
	131306: _ErrCode_name[1808:1822],
	131307: _ErrCode_name[1822:1840],
	131308: _ErrCode_name[1840:1858],
	131309: _ErrCode_name[1858:1885],
	131310: _ErrCode_name[1885:1903],
	131311: _ErrCode_name[1903:1914],
	131312: _ErrCode_name[1914:1934],
	131313: _ErrCode_name[1934:1950],
	131314: _ErrCode_name[1950:1967],
	131401: _ErrCode_name[1967:1982],
	131402: _ErrCode_name[1982:2001],
	131403: _ErrCode_name[2001:2020],
	131404: _ErrCode_name[2020:2039],
	131405: _ErrCode_name[2039:2051],
	141001: _ErrCode_name[2051:2072],
	141002: _ErrCode_name[2072:2097],
	141003: _ErrCode_name[2097:2122],
	141004: _ErrCode_name[2122:2147],
	141005: _ErrCode_name[2147:2174],
	141006: _ErrCode_name[2174:2194],
	141007: _ErrCode_name[2194:2215],
	141008: _ErrCode_name[2215:2230],
	141009: _ErrCode_name[2230:2250],
	141010: _ErrCode_name[2250:2269],
	141011: _ErrCode_name[2269:2293],
	141012: _ErrCode_name[2293:2317],
	141013: _ErrCode_name[2317:2341],
	151000: _ErrCode_name[2341:2354],
	151001: _ErrCode_name[2354:2364],
	151002: _ErrCode_name[2364:2373],
	151003: _ErrCode_name[2373:2390],
	151004: _ErrCode_name[2390:2407],
	151005: _ErrCode_name[2407:2424],
	151006: _ErrCode_name[2424:2441],
	151007: _ErrCode_name[2441:2465],
	151008: _ErrCode_name[2465:2489],
	151009: _ErrCode_name[2489:2513],
	151010: _ErrCode_name[2513:2533],
	151011: _ErrCode_name[2533:2552],
	161001: _ErrCode_name[2552:2566],
	161002: _ErrCode_name[2566:2584],
	161003: _ErrCode_name[2584:2602],
	161004: _ErrCode_name[2602:2620],
	161005: _ErrCode_name[2620:2640],
	161006: _ErrCode_name[2640:2651],
	161007: _ErrCode_name[2651:2673],
	161008: _ErrCode_name[2673:2691],
	161009: _ErrCode_name[2691:2707],
	161010: _ErrCode_name[2707:2723],
	161011: _ErrCode_name[2723:2735],
	199801: _ErrCode_name[2735:2760],
	199802: _ErrCode_name[2760:2782],
	199803: _ErrCode_name[2782:2804],
	199804: _ErrCode_name[2804:2826],
}

func (i ErrCode) String() string {
	if str, ok := _ErrCode_map[i]; ok {
		return str
	}
	return "ErrCode(" + strconv.FormatInt(int64(i), 10) + ")"
}
